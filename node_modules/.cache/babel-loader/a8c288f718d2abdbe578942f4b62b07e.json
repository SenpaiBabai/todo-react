{"ast":null,"code":"var _jsxFileName = \"/Users/senpaibabai/my-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Todo from \"./components/Todo\";\nimport Form from \"./components/Form\";\nimport FilterButton from \"./components/FilterButton\";\nimport { nanoid } from \"nanoid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FILTER_MAP = {\n  All: () => true,\n  Active: task => !task.completed,\n  Completed: task => task.completed\n};\nconst FILTER_NAMES = Object.keys(FILTER_MAP);\n_c = FILTER_NAMES;\n\nfunction App(props) {\n  _s();\n\n  const [tasks, setTask] = useState(props.tasks);\n  const [filter, setFilter] = useState('All');\n\n  function addTask(name) {\n    const newTask = {\n      id: `todo-${nanoid()}`,\n      name,\n      completed: false\n    };\n    setTask([...tasks, newTask]);\n  }\n\n  function deleteTask(id) {\n    const updatedTasks = tasks.filter(task => id !== task.id);\n    setTask(updatedTasks);\n  }\n\n  function editTask(id, newName) {\n    const editedTask = tasks.map(task => {\n      if (id === task.id) {\n        return { ...task,\n          name: newName\n        };\n      }\n\n      return task;\n    });\n    setTask(editedTask);\n  }\n\n  const taskList = tasks.map(task => /*#__PURE__*/_jsxDEV(Todo, {\n    id: task.id,\n    name: task.name,\n    completed: task.completed,\n    deleteTask: deleteTask,\n    editTask: editTask\n  }, task.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this));\n  const filterList = FILTER_NAMES.map(name => /*#__PURE__*/_jsxDEV(FilterButton, {\n    name: name,\n    isPressed: name === filter\n  }, name, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this));\n  const tasksNoun = taskList.length !== 1 ? 'tasks' : 'task';\n  const headingText = `${taskList.length} ${tasksNoun} remaining`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todoapp stack-large\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"TodoMatic\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      addTask: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filters btn-group stack-exception\",\n      children: filterList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      id: \"list-heading\",\n      children: headingText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      role: \"list\",\n      className: \"todo-list stack-large stack-exception\",\n      \"aria-labelledby\": \"list-heading\",\n      children: taskList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"4E6U8Mrkc6fr2cSPkS7iRkq1fgI=\");\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"FILTER_NAMES\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","Todo","Form","FilterButton","nanoid","FILTER_MAP","All","Active","task","completed","Completed","FILTER_NAMES","Object","keys","App","props","tasks","setTask","filter","setFilter","addTask","name","newTask","id","deleteTask","updatedTasks","editTask","newName","editedTask","map","taskList","filterList","tasksNoun","length","headingText"],"sources":["/Users/senpaibabai/my-app/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Todo from \"./components/Todo\";\nimport Form from \"./components/Form\";\nimport FilterButton from \"./components/FilterButton\";\nimport { nanoid } from \"nanoid\";\n\nconst FILTER_MAP = {\n    All: () => true,\n    Active: (task) => !task.completed,\n    Completed: (task) => task.completed,\n}\n\nconst FILTER_NAMES = Object.keys(FILTER_MAP);\n\nfunction App(props) {\n    const [tasks, setTask] = useState(props.tasks)\n    const [filter, setFilter] = useState('All');\n\n    function addTask(name) {\n        const newTask = {id: `todo-${nanoid()}`, name, completed: false};\n        setTask([...tasks, newTask])\n    }\n\n    function deleteTask(id){\n        const updatedTasks = tasks.filter((task) => id !== task.id);\n        setTask(updatedTasks);\n    }\n\n    function editTask(id, newName){\n        const editedTask = tasks.map((task) => {\n            if (id === task.id) {\n                return {...task, name: newName}\n            }\n            return task;\n        });\n        setTask(editedTask);\n    }\n\n    const taskList = tasks.map((task) => (\n        <Todo\n            id={task.id}\n            name={task.name}\n            completed={task.completed}\n            key={task.id}\n            deleteTask={deleteTask}\n            editTask={editTask}\n        />\n    ));\n\n    const filterList = FILTER_NAMES.map((name) => (\n        <FilterButton\n            key={name}\n            name={name}\n            isPressed={name === filter}\n\n        />\n    ))\n\n    const tasksNoun = taskList.length !== 1 ? 'tasks' : 'task';\n    const headingText = `${taskList.length} ${tasksNoun} remaining`;\n\n    return (\n        <div className=\"todoapp stack-large\">\n            <h1>TodoMatic</h1>\n            <Form addTask={addTask} />\n            <div className=\"filters btn-group stack-exception\">\n                {filterList}\n            </div>\n            <h2 id=\"list-heading\">\n                {headingText}\n            </h2>\n            <ul\n                role=\"list\"\n                className=\"todo-list stack-large stack-exception\"\n                aria-labelledby=\"list-heading\"\n            >\n                {taskList}\n            </ul>\n        </div>\n    );\n}\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}